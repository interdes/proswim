mixin inputbox(label, link, linkMod)
  .inputbox&attributes(attributes)
    if label
      .inputbox__head
        P.inputbox__label=label

        if link
          +link.inputbox__link(class=linkMod)=link
    block

mixin input()
  +b.INPUT.input&attributes(attributes)

mixin input-label(placeholder)
  +b.LABEL.input-label(class="js-input-dynamic")
    +e.placeholder
      +e.SPAN.label=placeholder
    +b.INPUT.input&attributes(attributes)

mixin input-btn(icon)
  +b.inputbtn&attributes(attributes)
    block
    +e.btn
      +icon(icon).icon

mixin input-number()
  .input-numberbox
    span.input-numberbox__button.js-numberbox-minus
    input.input.input-numberbox__input.js-numberbox-input&attributes(attributes)
    span.input-numberbox__button.js-numberbox-plus

mixin textarea()
  textarea.textarea&attributes(attributes)
    block

mixin select()
  select.select(data-toggler-icon='arrow' data-toggler-icon-mod='arrow')&attributes(attributes).js-select
    block

mixin checkbox(name, value, checked, required, type, className)
  +b.LABEL.checkradio&attributes(attributes)
    - var check = checked || '';
    +e.INPUT.input(name=name, value=value, checked=!!check, type=type||"checkbox", required=required, class=className)
    +e.SPAN.box
      +icon('checked').icon
    +e.SPAN.content
      block

mixin radio(name, value, checked)
  +b.LABEL.checkradio._radio&attributes(attributes)
    +e.INPUT.input(name=name, value=value, checked=checked, type="radio")
    +e.SPAN.box
    +e.SPAN.content
      block

mixin radiosep
  +b.LABEL.checkradio._radio&attributes(attributes)
    block

mixin radiosepinput
  +e.INPUT.input(type="radio")&attributes(attributes)

mixin radiosepcontent
  +e.SPAN.box
  +e.SPAN.content
    block

mixin checkboxsep
  +b.LABEL.checkradio&attributes(attributes)
    block

mixin checkboxsepinput
  +e.INPUT.input(type="checkbox")&attributes(attributes)

mixin checkboxsepcontent
  +e.SPAN.box
    +icon('checked').icon
  +e.SPAN.content
    block

mixin checkboxsepnumbers
  +e.SPAN.content
    block

mixin checkboxsepcolors
  +e.SPAN.box
    +icon('checked').icon
  block  

mixin range(noJs)
  +b.range&attributes(attributes)(class=noJs ? '' : 'js-range')
    block
